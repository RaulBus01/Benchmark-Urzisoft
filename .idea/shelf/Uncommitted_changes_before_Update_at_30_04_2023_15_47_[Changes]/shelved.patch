Index: Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/GetDetailsHardware.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/GetDetailsHardware.java b/Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/HardwareDetails.java
rename from Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/GetDetailsHardware.java
rename to Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/HardwareDetails.java
--- a/Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/GetDetailsHardware.java	
+++ b/Frontend/Frontend Urzisoft/src/main/java/com/example/frontend_urzisoft/HardwareDetails/HardwareDetails.java	
@@ -1,9 +1,6 @@
 package com.example.frontend_urzisoft.HardwareDetails;
 
 
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -12,15 +9,32 @@
 import oshi.util.FormatUtil;
 import oshi.software.os.OperatingSystem;
 
-public class GetDetailsHardware
+public class HardwareDetails
 {
-public void getHardwareInfo() {
+    private List<RAM> ramList = new ArrayList<RAM>();
+    private CPU cpuInst ;
+    private SystemBoard systemBoard;
+
+    public SystemBoard getSystemBoard()
+    {
+        return systemBoard;
+    }
+
+    public CPU getCPU()
+    {
+        return cpuInst;
+    }
+    public List<RAM> getRamList()
+    {
+        return ramList;
+    }
+
+public void getHardwareInfo()
+{
     // Retrieve the operating system MXBean
     SystemInfo sys = new SystemInfo();
     OperatingSystem os = sys.getOperatingSystem();
 
-
-
     HardwareAbstractionLayer hardware = sys.getHardware();
 
     CentralProcessor cpu = hardware.getProcessor();
@@ -29,23 +43,14 @@
 
     GlobalMemory memory = hardware.getMemory();
     List<PhysicalMemory> ram = memory.getPhysicalMemory();
-    List<RAM> ramList = new ArrayList<RAM>();
-
-
-
-//    for (RAM ramItem : ramList)
-//    {
-//        //System.out.println(ramItem.getManufacturer() + " " + ramItem.getMemoryType() + " " + ramItem.getBankLabel() + " " + ramItem.getGetCapacity() + " " + ramItem.getFrequency());
-//    }
-    // System.out.println(cpuInst.getName() + " " + cpuInst.getLogicalCores() + " " + cpuInst.getPhysicalCores());
-
     Baseboard baseboard = hardware.getComputerSystem().getBaseboard();
 
-    SystemBoard systemBoard = new SystemBoard(baseboard.getManufacturer(),hardware.getComputerSystem().getModel(), os.getFamily() + " " + os.getVersionInfo());
-    CPU cpuInst = new CPU(cpuID.getName(), cpu.getPhysicalProcessorCount(), cpu.getLogicalProcessorCount());
+    systemBoard = new SystemBoard(baseboard.getManufacturer(), os.getFamily() + " " + os.getVersionInfo(),hardware.getComputerSystem().getModel());
+    cpuInst = new CPU(cpuID.getName(), cpu.getPhysicalProcessorCount(), cpu.getLogicalProcessorCount());
     for (PhysicalMemory ramItem : ram)
     {
         ramList.add(new RAM(ramItem.getManufacturer(), ramItem.getMemoryType(), ramItem.getBankLabel(), FormatUtil.formatBytesDecimal(ramItem.getCapacity()), FormatUtil.formatHertz(ramItem.getClockSpeed())));
     }
+
 }
 }
